#BlueJ class context
comment0.target=HandInterface
comment0.text=\r\n\ Represents\ the\ basic\ functionality\ of\ a\ hand\ of\ cards.\r\n\ Extensions\ of\ this\ class\ will\ provide\ the\r\n\ definition\ of\ what\ constitutes\ a\ hand\ for\ that\ game\ and\ how\ hands\ are\ compared\r\n\ to\ one\ another\ by\ overriding\ the\ <code>compareTo</code>\ method.\r\n
comment1.params=card
comment1.target=void\ addCard(Card)
comment1.text=\r\n\ Adds\ a\ card\ to\ this\ hand.\r\n\ @param\ card\ card\ to\ be\ added\ to\ the\ current\ hand.\r\n
comment10.params=otherHandObject
comment10.target=int\ compareTo(java.lang.Object)
comment10.text=\r\n\ \ Compares\ two\ hands.\r\n\ \ @param\ otherHandObject\ the\ hand\ being\ compared.\r\n\ \ @return\ <\ 0\ if\ this\ hand\ is\ less\ than\ the\ other\ hand,\ 0\ if\ the\ two\ hands\ are\r\n\ \ the\ same,\ or\ >\ 0\ if\ this\ hand\ is\ greater\ then\ the\ other\ hand.\r\n
comment11.params=
comment11.target=int\ evaluateHand()
comment11.text=\r\n\ \ Evaluates\ the\ hand.\ \ Must\ be\ defined\ in\ the\ subclass\ that\ implements\ the\ hand\r\n\ \ for\ the\ game\ being\ written\ by\ the\ client\ programmer.\r\n\ \ @return\ an\ integer\ corresponding\ to\ the\ rating\ of\ the\ hand.\r\n
comment12.params=
comment12.target=java.lang.String\ toString()
comment12.text=\r\n\ Returns\ a\ description\ of\ the\ hand.\r\n\ @return\ a\ list\ of\ cards\ held\ in\ the\ hand.\r\n
comment2.params=index
comment2.target=Card\ getCard(int)
comment2.text=\r\n\ Obtains\ the\ card\ stored\ at\ the\ specified\ location\ in\ the\ hand.\ \ Does\ not\r\n\ remove\ the\ card\ from\ the\ hand.\r\n\ @param\ index\ position\ of\ card\ to\ be\ accessed.\r\n\ @return\ the\ card\ of\ interest,\ or\ the\ null\ reference\ if\ the\ index\ is\ out\ of\r\n\ bounds.\r\n
comment3.params=card
comment3.target=Card\ removeCard(Card)
comment3.text=\r\n\ Removes\ the\ specified\ card\ from\ the\ current\ hand.\r\n\ @param\ card\ the\ card\ to\ be\ removed.\r\n\ @return\ the\ card\ removed\ from\ the\ hand,\ or\ null\ if\ the\ card\r\n\ was\ not\ present\ in\ the\ hand.\r\n
comment4.params=index
comment4.target=Card\ removeCard(int)
comment4.text=\r\n\ Removes\ the\ card\ at\ the\ specified\ index\ from\ the\ hand.\r\n\ @param\ index\ poisition\ of\ the\ card\ to\ be\ removed.\r\n\ @return\ the\ card\ removed\ from\ the\ hand,\ or\ the\ null\ reference\ if\r\n\ the\ index\ is\ out\ of\ bounds.\r\n
comment5.params=
comment5.target=int\ getNumberOfCards()
comment5.text=\r\n\ The\ number\ of\ cards\ held\ in\ the\ hand.\r\n\ @return\ number\ of\ cards\ currently\ held\ in\ the\ hand.\r\n
comment6.params=
comment6.target=void\ sort()
comment6.text=\r\n\ Sorts\ the\ card\ in\ the\ hand.\r\n\ Sort\ is\ performed\ according\ to\ the\ order\ specified\ in\ the\ {@link\ Card}\ class.\r\n
comment7.params=
comment7.target=boolean\ isEmpty()
comment7.text=\r\n\ Checks\ to\ see\ if\ the\ hand\ is\ empty.\r\n\ @return\ <code>true</code>\ is\ the\ hand\ is\ empty.\r\n
comment8.params=card
comment8.target=boolean\ containsCard(Card)
comment8.text=\r\n\ Determines\ whether\ or\ not\ the\ hand\ contains\ the\ specified\ card.\r\n\ @param\ card\ the\ card\ being\ searched\ for\ in\ the\ hand.\r\n\ @return\ <code>true</code>\ if\ the\ card\ is\ present\ in\ the\ hand.\r\n
comment9.params=card
comment9.target=int\ findCard(Card)
comment9.text=\r\n\ Searches\ for\ the\ first\ instance\ of\ the\ specified\ card\ in\ the\ hand.\r\n\ @param\ card\ card\ being\ searched\ for.\r\n\ @return\ position\ index\ of\ card\ if\ found,\ or\ <code>-1</code>\ if\ not\ found.\r\n
numComments=13
